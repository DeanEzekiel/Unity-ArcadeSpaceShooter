//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player Keyboard"",
            ""id"": ""af044b05-7646-40db-a158-d0da75faaca3"",
            ""actions"": [
                {
                    ""name"": ""Horizontal"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6532f8ac-936e-41c4-8fe5-99518e5363d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Vertical"",
                    ""type"": ""PassThrough"",
                    ""id"": ""13b9670f-fd25-4fae-ada0-6a8e86e48b9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2da49222-d594-4305-9a8c-4f4c1fbc6628"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Guard"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8a654975-e76c-4860-bf66-3094e190562b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Blast"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5240ae7c-7082-4bc7-923f-eb405b0f46cc"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4c656aaf-0a2a-4db3-be09-325837be244d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard A & D"",
                    ""id"": ""bbf72c40-5cf1-4e01-a60c-37ae94ac27c5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d6db4e98-ad61-4640-a92b-353c3c179b51"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""da1b2162-c5a5-4dbc-a164-5db247c4a5bf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard Left & Right"",
                    ""id"": ""9a551cba-edbb-4e3b-960e-01ce04b47974"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4f93b932-7309-489d-8ea3-e1cd4ef1cd37"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fe22b99f-d6f9-4579-b3eb-d235a4c39f01"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard W & S"",
                    ""id"": ""23760446-452a-4e86-ad61-1283d67bba3b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""36ebab3e-edb2-496c-8c9f-da6adf746fc3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4871517f-71bf-4300-8390-cb4180f0cacd"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard Up & Down"",
                    ""id"": ""927d0fc9-b7bc-4571-9154-3beaf776ef73"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f1e89497-cb75-4ba1-9ad6-8bb5fb7205c2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b6e09776-3f25-47cb-88b7-2fabf243f95c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""206a5a68-c879-4d11-b205-bf8694d8ca0c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2cf8a79-7c63-4f78-b467-a940f36f3e03"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Guard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fea8ea18-e2b5-434b-960f-a7e52d014099"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Blast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ddadd86c-c22e-4b0c-acb9-678eaf28f47c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Keyboard
        m_PlayerKeyboard = asset.FindActionMap("Player Keyboard", throwIfNotFound: true);
        m_PlayerKeyboard_Horizontal = m_PlayerKeyboard.FindAction("Horizontal", throwIfNotFound: true);
        m_PlayerKeyboard_Vertical = m_PlayerKeyboard.FindAction("Vertical", throwIfNotFound: true);
        m_PlayerKeyboard_Shoot = m_PlayerKeyboard.FindAction("Shoot", throwIfNotFound: true);
        m_PlayerKeyboard_Guard = m_PlayerKeyboard.FindAction("Guard", throwIfNotFound: true);
        m_PlayerKeyboard_Blast = m_PlayerKeyboard.FindAction("Blast", throwIfNotFound: true);
        m_PlayerKeyboard_Pause = m_PlayerKeyboard.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Keyboard
    private readonly InputActionMap m_PlayerKeyboard;
    private IPlayerKeyboardActions m_PlayerKeyboardActionsCallbackInterface;
    private readonly InputAction m_PlayerKeyboard_Horizontal;
    private readonly InputAction m_PlayerKeyboard_Vertical;
    private readonly InputAction m_PlayerKeyboard_Shoot;
    private readonly InputAction m_PlayerKeyboard_Guard;
    private readonly InputAction m_PlayerKeyboard_Blast;
    private readonly InputAction m_PlayerKeyboard_Pause;
    public struct PlayerKeyboardActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerKeyboardActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Horizontal => m_Wrapper.m_PlayerKeyboard_Horizontal;
        public InputAction @Vertical => m_Wrapper.m_PlayerKeyboard_Vertical;
        public InputAction @Shoot => m_Wrapper.m_PlayerKeyboard_Shoot;
        public InputAction @Guard => m_Wrapper.m_PlayerKeyboard_Guard;
        public InputAction @Blast => m_Wrapper.m_PlayerKeyboard_Blast;
        public InputAction @Pause => m_Wrapper.m_PlayerKeyboard_Pause;
        public InputActionMap Get() { return m_Wrapper.m_PlayerKeyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerKeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerKeyboardActions instance)
        {
            if (m_Wrapper.m_PlayerKeyboardActionsCallbackInterface != null)
            {
                @Horizontal.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnHorizontal;
                @Horizontal.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnHorizontal;
                @Horizontal.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnHorizontal;
                @Vertical.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnVertical;
                @Vertical.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnVertical;
                @Vertical.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnVertical;
                @Shoot.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnShoot;
                @Guard.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnGuard;
                @Guard.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnGuard;
                @Guard.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnGuard;
                @Blast.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnBlast;
                @Blast.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnBlast;
                @Blast.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnBlast;
                @Pause.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_PlayerKeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Horizontal.started += instance.OnHorizontal;
                @Horizontal.performed += instance.OnHorizontal;
                @Horizontal.canceled += instance.OnHorizontal;
                @Vertical.started += instance.OnVertical;
                @Vertical.performed += instance.OnVertical;
                @Vertical.canceled += instance.OnVertical;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Guard.started += instance.OnGuard;
                @Guard.performed += instance.OnGuard;
                @Guard.canceled += instance.OnGuard;
                @Blast.started += instance.OnBlast;
                @Blast.performed += instance.OnBlast;
                @Blast.canceled += instance.OnBlast;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public PlayerKeyboardActions @PlayerKeyboard => new PlayerKeyboardActions(this);
    public interface IPlayerKeyboardActions
    {
        void OnHorizontal(InputAction.CallbackContext context);
        void OnVertical(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnGuard(InputAction.CallbackContext context);
        void OnBlast(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
